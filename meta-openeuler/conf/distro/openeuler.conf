include conf/distro/include/phosphor-base.inc

## current conf version
LOCALCONF_VERSION = "2"

## DISTRO information
DISTRO = "openeuler"
DISTRO_NAME = "openEuler Embedded(openEuler Embedded Reference Distro)"
DISTRO_VERSION = "24.03-LTS"
DISTRO_CODENAME = "openEuler${@d.getVar('DISTRO_VERSION').replace('.', '_')}"
MAINTAINER = "openEuler <dev@openeuler.org>"
TARGET_VENDOR = "-openeuler"

## runtime/rootfs related configurations
# define default init and device manager
INIT_MANAGER ?= "mdev-busybox"
VIRTUAL-RUNTIME_dev_manager ?= "busybox-mdev"
# pam package is used for authentication
OPENEULER_DEFAULT_DISTRO_FEATURES = "pam"
# define root home, default /home/root
ROOT_HOME ?= "/root"

DISTRO_FEATURES ?= "${DISTRO_FEATURES_DEFAULT} ${OPENEULER_DEFAULT_DISTRO_FEATURES}"

# Even we uses other init manager (busybox or systemd),
# we need sysvinit DISTRO_FEATURES to enable update-rc.d mechanism
DISTRO_FEATURES += "sysvinit"

# remove currently unsupported features
DISTRO_FEATURES_DEFAULT:remove = "bluetooth x11"

## kernel related configurations
# the oldest kernel supported by openeuler embedded is 5.10
OLDEST_KERNEL:forcevariable = "5.10"
# set default kernel provider
PREFERRED_PROVIDER_virtual/kernel ?= "linux-openeuler"
# set default kernel version,  valid version includes 5.10 (22.03 LTS), 6.6 (24.03 LTS)
PREFERRED_VERSION_linux-openeuler ?= "5.10%"
PREFERRED_VERSION_linux-openeuler-rt ?= "5.10%"
# dhcp-relay provider
PREFERRED_PROVIDER_dhcp-relay ?= "dhcp"

# atk and at-spi2-atk provider
PREFERRED_PROVIDER_atk ?= "at-spi2-core"
PREFERRED_PROVIDER_atk-native ?= "at-spi2-core-native"
PREFERRED_PROVIDER_nativesdk-atk ?= "nativesdk-at-spi2-core"
PREFERRED_PROVIDER_at-spi2-atk ?= "at-spi2-core"
PREFERRED_PROVIDER_at-spi2-atk-native ?= "at-spi2-core-native"
PREFERRED_PROVIDER_nativesdk-at-spi2-atk ?= "nativesdk-at-spi2-core"

## build related configurations
# setting SOURCE_DATE_EPOCH for reproducible build
SOURCE_DATE_EPOCH = "${@get_openeuler_epoch(d)}"
# do not split packages for debug purpose
INHIBIT_PACKAGE_DEBUG_SPLIT = "1"

# set BUILD_LDFLAGS for native recipes buildings, nativesdk can be
# a start point for the necessary build-required native recipes, no need to do
# everything from the scratch
OPENEULER_NATIVESDK_LOADER ?= "${OPENEULER_NATIVESDK_SYSROOT}/lib/ld-linux-x86-64.so.2"
# BUILD_LDFLAGS works for native packages build
BUILD_LDFLAGS:append = " ${@['', '-Wl,--allow-shlib-undefined -Wl,--dynamic-linker=${OPENEULER_NATIVESDK_LOADER}']['${OPENEULER_PREBUILT_TOOLS_ENABLE}' == 'yes']}"


## SDK related configurations
SDK_VENDOR = "-openeulersdk"
SDK_VERSION = "${@d.getVar('DISTRO_VERSION').replace('snapshot-${METADATA_REVISION}', 'snapshot')}"
SDK_VERSION[vardepvalue] = "${SDK_VERSION}"
# set SDK name
SDK_NAME = "${DISTRO}-${TCLIBC}-${SDKMACHINE}-${IMAGE_BASENAME}-${TUNE_PKGARCH}-${MACHINE}"
# The path to default to installing the SDK to
SDKPATHINSTALL = "/opt/${DISTRO}/${SDK_NAME_PREFIX}-${SDK_ARCH}"
# no include buildtools in sdk generation
SDK_INCLUDE_BUILDTOOLS = "0"


## toolchain and c library related configurations
TCLIBCAPPEND = ""
# by default glibc is used
TCLIBC ?= "glibc"
# openeuler use external toolchain, see tcmode-external.inc
TCMODE-LIBC ?= "glibc-external"
TCMODE-CRYPT ?= "libxcrypt-external"

### OUTPUT_DIR point to image installation directory
OUTPUTTIME = "${DATETIME}"
# Ignore how DATETIME is computed
OUTPUTTIME[vardepsexclude] = "DATETIME"
OUTPUT_DIR = "${TOPDIR}/output/${OUTPUTTIME}"
# Ignore how TOPDIR is computed
OUTPUT_DIR[vardepsexclude] = "TOPDIR"

## fetch and source dir related configurations
# for software packages adpated in openeuler, remove the original external uri
OPENEULER_SRC_URI_REMOVE ?= "https git http"
# do not use default download dir, use openeuler's configuration
OPENEULER_REPO_NAME ?= "${BPN}"
OPENEULER_LOCAL_NAME ?= "${OPENEULER_REPO_NAME}"
# use OPENEULER_REPO_NAMES to match the content of the manifest.yaml file for downloading the code
OPENEULER_REPO_NAMES ?= "${OPENEULER_LOCAL_NAME}"
OEE_ARCHIVE_SUBDIR ?= "${BPN}"
DL_DIR ?= "${OPENEULER_SP_DIR}/${OPENEULER_REPO_NAME}"
# for all .bb file, OPENEULER_SP_DIR  will be included
# in file path
FILESEXTRAPATHS:prepend = "${OPENEULER_SP_DIR}:"
# cache SRCREV during parsing, so the SRCREV will not be affected by the
# changes in manifest.yaml, this will save some parsing time when bitbake runs
# if you need SRCREV to always follow changes in manifest.yaml, pls set
# BB_SRCREV_POLICY = "clear" in the local.conf or bb/.bbappend file
BB_SRCREV_POLICY ?= "cache"

## task hash configuration for openEuler
BB_SIGNATURE_HANDLER ?= "OEEquivHash"
BB_HASHSERVE ??= "auto"
## the openeuler related variables and functions should not be included in
## task hash generation
# OPENEULER_SP_DIR is frequently changed
# do_openeuler_fetch is still evolving, so exclude it, if required, run it forcedly
BB_BASEHASH_IGNORE_VARS:append = " OPENEULER_SP_DIR do_openeuler_fetch"

## set CONNECTIVITY_CHECK_URIS to empty to disable url checkstatus
CONNECTIVITY_CHECK_URIS = ""

## host tools related configurations
# whether to use openeuler_hosttools.inc
OPENEULER_HOSTTOOLS_INC = "${@['', 'conf/distro/include/openeuler_hosttools.inc']['${OPENEULER_PREBUILT_TOOLS_ENABLE}' == 'yes']}"
require ${OPENEULER_HOSTTOOLS_INC}
# used to unpack source such as *.tar.xz, *.rpm, etc
HOSTTOOLS += "xz xzcat"

## bsp related configurations
require conf/distro/openeuler-bsp.conf


## all bb files should inherit openeuler.bbclass
INHERIT += "openeuler"

# The openeuler-image-live as the live-os.
# When LIVE_ROOTFS_TYPE defined, bug may come out in poky, so just use default value ext4 in image-live.bbclass.
# Notice: We need MACHINE_FEATURES += "efi" in machine conf
INITRD_IMAGE_LIVE ?= "openeuler-image-live"

# not set INITRAMFS MAXSIZE
INITRAMFS_MAXSIZE = ""

# alsa-utils-scripts merge to alsa-utils from 1.2.8
PREFERRED_PROVIDER_alsa-utils-scripts ?= "alsa-utils"

